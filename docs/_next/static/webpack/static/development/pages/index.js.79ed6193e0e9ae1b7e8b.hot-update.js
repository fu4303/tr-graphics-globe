webpackHotUpdate("static/development/pages/index.js",{

/***/ "./src/lib/chart.js":
/*!**************************!*\
  !*** ./src/lib/chart.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var topojson_client__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! topojson-client */ \"./node_modules/topojson-client/src/index.js\");\n/* harmony import */ var _reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @reuters-graphics/graphics-atlas-client */ \"./node_modules/@reuters-graphics/graphics-atlas-client/dist/index.js\");\n/* harmony import */ var _reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _base_ChartComponent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./base/ChartComponent */ \"./src/lib/base/ChartComponent.js\");\n/* harmony import */ var _utils_d3__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/d3 */ \"./src/lib/utils/d3.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _topo_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./topo.js */ \"./src/lib/topo.js\");\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar Atlas = new _reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_8___default.a();\n\nvar Globetrotter = /*#__PURE__*/function (_ChartComponent) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Globetrotter, _ChartComponent);\n\n  var _super = _createSuper(Globetrotter);\n\n  function Globetrotter() {\n    var _this;\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Globetrotter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"defaultProps\", {\n      border_stroke_color: '#2f353f',\n      outer_stroke_color: 'rgba(255, 255, 255, 0.5)',\n      stroke_width_countries: 0.5,\n      stroke_width_sphere: 0.1,\n      highlight_color: '#fce587',\n      base_color: 'rgba(255, 255, 255, 0.2)',\n      vertical_tilt: 15,\n      margin: 10,\n      duration: 750,\n      enable_dot: true,\n      dot_radius: 5,\n      disputed: true,\n      location: {\n        value: false,\n        type: 'country'\n      },\n      // Other types are point and region\n      area_threshold: 10,\n      disputed_dasharray: [5, 5],\n      topojsonFeatures: {\n        countries: 'countries',\n        disputedBoundaries: 'disputedBoundaries',\n        land: 'land'\n      }\n    });\n\n    return _this;\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Globetrotter, [{\n    key: \"draw\",\n    value: function draw() {\n      var props = this.props();\n      var topology = this.topojson();\n      console.log(topology.objects);\n      var countriesFeatures = topology.objects[props.topojsonFeatures.countries];\n      var disputedBoundariesFeatures = topology.objects[props.topojsonFeatures.disputedBoundaries];\n      var landFeatures = topology.objects[props.topojsonFeatures.land];\n      var node = this.selection().node();\n      var sphere = {\n        type: 'Sphere'\n      };\n\n      var _node$getBoundingClie = node.getBoundingClientRect(),\n          width = _node$getBoundingClie.width;\n\n      var countries = topojson_client__WEBPACK_IMPORTED_MODULE_7__[\"feature\"](topology, countriesFeatures);\n      var borders = topojson_client__WEBPACK_IMPORTED_MODULE_7__[\"mesh\"](topology, countriesFeatures, function (a, b) {\n        return a !== b;\n      });\n      var disputed = topojson_client__WEBPACK_IMPORTED_MODULE_7__[\"mesh\"](topology, disputedBoundariesFeatures);\n      var land = topojson_client__WEBPACK_IMPORTED_MODULE_7__[\"feature\"](topology, landFeatures);\n      var projection = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].geoOrthographic().fitExtent([[10, 10], [width - 10, width - 10]], sphere);\n      var canvas = this.selection().appendSelect('canvas').attr('width', width).attr('height', width);\n      var x = canvas.attr('centroid-x');\n      var y = canvas.attr('centroid-y');\n      var p1 = [-x, props.vertical_tilt - y];\n\n      if (x && y) {\n        projection.rotate(p1);\n      }\n\n      var context = canvas.node().getContext('2d');\n      var path = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].geoPath(projection, context);\n      var p2 = [];\n      var location;\n      var country;\n\n      if (Array.isArray(props.location.value) && props.location.value.length === 2 && props.location.type === 'point') {\n        p2[0] = props.location.value[0];\n        p2[1] = props.location.value[1];\n      } else if (props.location.type === 'region') {\n        var countryList = Atlas.getRegion(props.location.value).countries.map(function (d) {\n          return d.isoAlpha3;\n        });\n\n        var _merged = topojson_client__WEBPACK_IMPORTED_MODULE_7__[\"merge\"](_topo_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"], _topo_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].objects.gadm.geometries.filter(function (d) {\n          return Object(lodash__WEBPACK_IMPORTED_MODULE_11__[\"indexOf\"])(countryList, d.properties.GID_0) > -1;\n        }));\n\n        p2 = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].geoCentroid(_merged);\n      } else if (props.location.type === 'country') {\n        var l = Atlas.getCountry(props.location.value);\n\n        if (l) {\n          location = l.isoAlpha3;\n          country = countries.features.filter(function (d) {\n            return d.properties.GID_0 === location;\n          })[0];\n          p2 = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].geoCentroid(country);\n        } else {\n          location = 'NA';\n\n          if (p2.length === 0) {\n            p2 = p1;\n          }\n        }\n      }\n\n      var area, endPath, merged;\n      render();\n\n      function render() {\n        if (p1[0] !== p2[0] && p1[1] !== p2[1] && p2[0] && p2[1]) {\n          endPath = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].geoPath(_utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].geoOrthographic().fitExtent([[10, 10], [width - 10, width - 10]], sphere).rotate([-p2[0], props.vertical_tilt - p2[1]]), context);\n          var r = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].interpolate(projection.rotate(), [-p2[0], props.vertical_tilt - p2[1]]);\n          area = endPath.area(country);\n          canvas.transition().duration(props.duration).tween('rotate', function () {\n            return function (t) {\n              projection.rotate(r(t));\n              var centroidPro = projection(p2);\n              context.clearRect(0, 0, width, width);\n              context.beginPath();\n              path(land);\n              context.fillStyle = props.base_color;\n              context.fill();\n\n              if (merged) {\n                context.beginPath();\n                path(merged);\n                context.fillStyle = props.highlight_color;\n                context.fill();\n              } else if (country && area > props.area_threshold || !props.enable_dot) {\n                context.beginPath();\n                path(country);\n                context.fillStyle = props.highlight_color;\n                context.fill();\n              }\n\n              if (props.disputed) {\n                context.beginPath();\n                path(disputed);\n                context.setLineDash(props.disputed_dasharray);\n                context.strokeStyle = props.border_stroke_color;\n                context.lineWidth = props.stroke_width_countries;\n                context.stroke();\n              }\n\n              context.beginPath();\n              path(borders);\n              context.setLineDash([]);\n              context.strokeStyle = props.border_stroke_color;\n              context.lineWidth = props.stroke_width_countries;\n              context.stroke();\n\n              if (props.enable_dot && area < props.area_threshold) {\n                context.beginPath();\n                context.arc(centroidPro[0], centroidPro[1], props.dot_radius, 0, 2 * Math.PI);\n                context.strokeStyle = props.highlight_color;\n                context.lineWidth = props.dot_radius - 2;\n                context.stroke();\n              }\n\n              context.beginPath();\n              path(sphere);\n              context.strokeStyle = props.outer_stroke_color;\n              context.lineWidth = props.stroke_width_sphere;\n              context.stroke();\n            };\n          });\n        } else {\n          context.clearRect(0, 0, width, width);\n          context.beginPath();\n          path(land);\n          context.fillStyle = props.base_color;\n          context.fill();\n\n          if (props.disputed) {\n            context.beginPath();\n            path(disputed);\n            context.setLineDash(props.disputed_dasharray);\n            context.strokeStyle = props.border_stroke_color;\n            context.lineWidth = props.stroke_width_countries;\n            context.stroke();\n          }\n\n          context.beginPath();\n          path(borders);\n          context.setLineDash([]);\n          context.strokeStyle = props.border_stroke_color;\n          context.lineWidth = props.stroke_width_countries;\n          context.stroke();\n          context.beginPath();\n          path(sphere);\n          context.strokeStyle = props.outer_stroke_color;\n          context.lineWidth = props.stroke_width_sphere;\n          context.stroke();\n        }\n      }\n\n      ;\n      canvas.attr('centroid-x', p2[0]);\n      canvas.attr('centroid-y', p2[1]);\n      return this;\n    }\n  }]);\n\n  return Globetrotter;\n}(_base_ChartComponent__WEBPACK_IMPORTED_MODULE_9__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Globetrotter);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL2NoYXJ0LmpzPzdiYjgiXSwibmFtZXMiOlsiQXRsYXMiLCJBdGxhc01ldGFkYXRhQ2xpZW50IiwiR2xvYmV0cm90dGVyIiwiYm9yZGVyX3N0cm9rZV9jb2xvciIsIm91dGVyX3N0cm9rZV9jb2xvciIsInN0cm9rZV93aWR0aF9jb3VudHJpZXMiLCJzdHJva2Vfd2lkdGhfc3BoZXJlIiwiaGlnaGxpZ2h0X2NvbG9yIiwiYmFzZV9jb2xvciIsInZlcnRpY2FsX3RpbHQiLCJtYXJnaW4iLCJkdXJhdGlvbiIsImVuYWJsZV9kb3QiLCJkb3RfcmFkaXVzIiwiZGlzcHV0ZWQiLCJsb2NhdGlvbiIsInZhbHVlIiwidHlwZSIsImFyZWFfdGhyZXNob2xkIiwiZGlzcHV0ZWRfZGFzaGFycmF5IiwidG9wb2pzb25GZWF0dXJlcyIsImNvdW50cmllcyIsImRpc3B1dGVkQm91bmRhcmllcyIsImxhbmQiLCJwcm9wcyIsInRvcG9sb2d5IiwidG9wb2pzb24iLCJjb25zb2xlIiwibG9nIiwib2JqZWN0cyIsImNvdW50cmllc0ZlYXR1cmVzIiwiZGlzcHV0ZWRCb3VuZGFyaWVzRmVhdHVyZXMiLCJsYW5kRmVhdHVyZXMiLCJub2RlIiwic2VsZWN0aW9uIiwic3BoZXJlIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwid2lkdGgiLCJib3JkZXJzIiwiYSIsImIiLCJwcm9qZWN0aW9uIiwiZDMiLCJnZW9PcnRob2dyYXBoaWMiLCJmaXRFeHRlbnQiLCJjYW52YXMiLCJhcHBlbmRTZWxlY3QiLCJhdHRyIiwieCIsInkiLCJwMSIsInJvdGF0ZSIsImNvbnRleHQiLCJnZXRDb250ZXh0IiwicGF0aCIsImdlb1BhdGgiLCJwMiIsImNvdW50cnkiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJjb3VudHJ5TGlzdCIsImdldFJlZ2lvbiIsIm1hcCIsImQiLCJpc29BbHBoYTMiLCJtZXJnZWQiLCJ3b3JsZCIsImdhZG0iLCJnZW9tZXRyaWVzIiwiZmlsdGVyIiwiaW5kZXhPZiIsInByb3BlcnRpZXMiLCJHSURfMCIsImdlb0NlbnRyb2lkIiwibCIsImdldENvdW50cnkiLCJmZWF0dXJlcyIsImFyZWEiLCJlbmRQYXRoIiwicmVuZGVyIiwiciIsImludGVycG9sYXRlIiwidHJhbnNpdGlvbiIsInR3ZWVuIiwidCIsImNlbnRyb2lkUHJvIiwiY2xlYXJSZWN0IiwiYmVnaW5QYXRoIiwiZmlsbFN0eWxlIiwiZmlsbCIsInNldExpbmVEYXNoIiwic3Ryb2tlU3R5bGUiLCJsaW5lV2lkdGgiLCJzdHJva2UiLCJhcmMiLCJNYXRoIiwiUEkiLCJDaGFydENvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLElBQU1BLEtBQUssR0FBRyxJQUFJQyw4RUFBSixFQUFkOztJQUVNQyxZOzs7Ozs7Ozs7Ozs7Ozs7O3VOQUNXO0FBQ2JDLHlCQUFtQixFQUFFLFNBRFI7QUFFYkMsd0JBQWtCLEVBQUUsMEJBRlA7QUFHYkMsNEJBQXNCLEVBQUUsR0FIWDtBQUliQyx5QkFBbUIsRUFBRSxHQUpSO0FBS2JDLHFCQUFlLEVBQUUsU0FMSjtBQU1iQyxnQkFBVSxFQUFFLDBCQU5DO0FBT2JDLG1CQUFhLEVBQUUsRUFQRjtBQVFiQyxZQUFNLEVBQUUsRUFSSztBQVNiQyxjQUFRLEVBQUUsR0FURztBQVViQyxnQkFBVSxFQUFFLElBVkM7QUFXYkMsZ0JBQVUsRUFBRSxDQVhDO0FBWWJDLGNBQVEsRUFBRSxJQVpHO0FBYWJDLGNBQVEsRUFBRTtBQUFFQyxhQUFLLEVBQUUsS0FBVDtBQUFnQkMsWUFBSSxFQUFFO0FBQXRCLE9BYkc7QUFhZ0M7QUFDN0NDLG9CQUFjLEVBQUUsRUFkSDtBQWViQyx3QkFBa0IsRUFBRSxDQUFDLENBQUQsRUFBSSxDQUFKLENBZlA7QUFnQmJDLHNCQUFnQixFQUFFO0FBQ2hCQyxpQkFBUyxFQUFFLFdBREs7QUFFaEJDLDBCQUFrQixFQUFFLG9CQUZKO0FBR2hCQyxZQUFJLEVBQUU7QUFIVTtBQWhCTCxLOzs7Ozs7OzJCQXVCUjtBQUNMLFVBQU1DLEtBQUssR0FBRyxLQUFLQSxLQUFMLEVBQWQ7QUFDQSxVQUFNQyxRQUFRLEdBQUcsS0FBS0MsUUFBTCxFQUFqQjtBQUNBQyxhQUFPLENBQUNDLEdBQVIsQ0FBWUgsUUFBUSxDQUFDSSxPQUFyQjtBQUNBLFVBQU1DLGlCQUFpQixHQUFHTCxRQUFRLENBQUNJLE9BQVQsQ0FBaUJMLEtBQUssQ0FBQ0osZ0JBQU4sQ0FBdUJDLFNBQXhDLENBQTFCO0FBQ0EsVUFBTVUsMEJBQTBCLEdBQUdOLFFBQVEsQ0FBQ0ksT0FBVCxDQUFpQkwsS0FBSyxDQUFDSixnQkFBTixDQUF1QkUsa0JBQXhDLENBQW5DO0FBQ0EsVUFBTVUsWUFBWSxHQUFHUCxRQUFRLENBQUNJLE9BQVQsQ0FBaUJMLEtBQUssQ0FBQ0osZ0JBQU4sQ0FBdUJHLElBQXhDLENBQXJCO0FBQ0EsVUFBTVUsSUFBSSxHQUFHLEtBQUtDLFNBQUwsR0FBaUJELElBQWpCLEVBQWI7QUFDQSxVQUFNRSxNQUFNLEdBQUc7QUFBRWxCLFlBQUksRUFBRTtBQUFSLE9BQWY7O0FBUkssa0NBU2FnQixJQUFJLENBQUNHLHFCQUFMLEVBVGI7QUFBQSxVQVNHQyxLQVRILHlCQVNHQSxLQVRIOztBQVVMLFVBQU1oQixTQUFTLEdBQUdLLHVEQUFBLENBQWlCRCxRQUFqQixFQUEyQkssaUJBQTNCLENBQWxCO0FBQ0EsVUFBTVEsT0FBTyxHQUFHWixvREFBQSxDQUFjRCxRQUFkLEVBQXdCSyxpQkFBeEIsRUFBMkMsVUFBQ1MsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsZUFBVUQsQ0FBQyxLQUFLQyxDQUFoQjtBQUFBLE9BQTNDLENBQWhCO0FBQ0EsVUFBTTFCLFFBQVEsR0FBR1ksb0RBQUEsQ0FBY0QsUUFBZCxFQUF3Qk0sMEJBQXhCLENBQWpCO0FBQ0EsVUFBTVIsSUFBSSxHQUFHRyx1REFBQSxDQUFpQkQsUUFBakIsRUFBMkJPLFlBQTNCLENBQWI7QUFDQSxVQUFNUyxVQUFVLEdBQUdDLGtEQUFFLENBQUNDLGVBQUgsR0FBcUJDLFNBQXJCLENBQStCLENBQUMsQ0FBQyxFQUFELEVBQUssRUFBTCxDQUFELEVBQVcsQ0FBQ1AsS0FBSyxHQUFHLEVBQVQsRUFBYUEsS0FBSyxHQUFHLEVBQXJCLENBQVgsQ0FBL0IsRUFBcUVGLE1BQXJFLENBQW5CO0FBRUEsVUFBSVUsTUFBTSxHQUFHLEtBQUtYLFNBQUwsR0FBaUJZLFlBQWpCLENBQThCLFFBQTlCLEVBQ1ZDLElBRFUsQ0FDTCxPQURLLEVBQ0lWLEtBREosRUFFVlUsSUFGVSxDQUVMLFFBRkssRUFFS1YsS0FGTCxDQUFiO0FBSUEsVUFBTVcsQ0FBQyxHQUFHSCxNQUFNLENBQUNFLElBQVAsQ0FBWSxZQUFaLENBQVY7QUFDQSxVQUFNRSxDQUFDLEdBQUdKLE1BQU0sQ0FBQ0UsSUFBUCxDQUFZLFlBQVosQ0FBVjtBQUNBLFVBQU1HLEVBQUUsR0FBRyxDQUFDLENBQUNGLENBQUYsRUFBS3hCLEtBQUssQ0FBQ2YsYUFBTixHQUFzQndDLENBQTNCLENBQVg7O0FBRUEsVUFBSUQsQ0FBQyxJQUFJQyxDQUFULEVBQVk7QUFDVlIsa0JBQVUsQ0FBQ1UsTUFBWCxDQUFrQkQsRUFBbEI7QUFDRDs7QUFFRCxVQUFNRSxPQUFPLEdBQUdQLE1BQU0sQ0FBQ1osSUFBUCxHQUFjb0IsVUFBZCxDQUF5QixJQUF6QixDQUFoQjtBQUVBLFVBQU1DLElBQUksR0FBR1osa0RBQUUsQ0FBQ2EsT0FBSCxDQUFXZCxVQUFYLEVBQXVCVyxPQUF2QixDQUFiO0FBRUEsVUFBSUksRUFBRSxHQUFHLEVBQVQ7QUFBYSxVQUFJekMsUUFBSjtBQUFjLFVBQUkwQyxPQUFKOztBQUMzQixVQUFJQyxLQUFLLENBQUNDLE9BQU4sQ0FBY25DLEtBQUssQ0FBQ1QsUUFBTixDQUFlQyxLQUE3QixLQUF1Q1EsS0FBSyxDQUFDVCxRQUFOLENBQWVDLEtBQWYsQ0FBcUI0QyxNQUFyQixLQUFnQyxDQUF2RSxJQUE0RXBDLEtBQUssQ0FBQ1QsUUFBTixDQUFlRSxJQUFmLEtBQXdCLE9BQXhHLEVBQWlIO0FBQy9HdUMsVUFBRSxDQUFDLENBQUQsQ0FBRixHQUFRaEMsS0FBSyxDQUFDVCxRQUFOLENBQWVDLEtBQWYsQ0FBcUIsQ0FBckIsQ0FBUjtBQUNBd0MsVUFBRSxDQUFDLENBQUQsQ0FBRixHQUFRaEMsS0FBSyxDQUFDVCxRQUFOLENBQWVDLEtBQWYsQ0FBcUIsQ0FBckIsQ0FBUjtBQUNELE9BSEQsTUFHTyxJQUFJUSxLQUFLLENBQUNULFFBQU4sQ0FBZUUsSUFBZixLQUF3QixRQUE1QixFQUFzQztBQUMzQyxZQUFNNEMsV0FBVyxHQUFJN0QsS0FBSyxDQUFDOEQsU0FBTixDQUFnQnRDLEtBQUssQ0FBQ1QsUUFBTixDQUFlQyxLQUEvQixFQUFzQ0ssU0FBdkMsQ0FBa0QwQyxHQUFsRCxDQUFzRCxVQUFBQyxDQUFDO0FBQUEsaUJBQUlBLENBQUMsQ0FBQ0MsU0FBTjtBQUFBLFNBQXZELENBQXBCOztBQUNBLFlBQU1DLE9BQU0sR0FBR3hDLHFEQUFBLENBQWV5QyxpREFBZixFQUFzQkEsaURBQUssQ0FBQ3RDLE9BQU4sQ0FBY3VDLElBQWQsQ0FBbUJDLFVBQW5CLENBQThCQyxNQUE5QixDQUFxQyxVQUFTTixDQUFULEVBQVk7QUFBRSxpQkFBT08sdURBQU8sQ0FBQ1YsV0FBRCxFQUFjRyxDQUFDLENBQUNRLFVBQUYsQ0FBYUMsS0FBM0IsQ0FBUCxHQUEyQyxDQUFDLENBQW5EO0FBQXVELFNBQTFHLENBQXRCLENBQWY7O0FBQ0FqQixVQUFFLEdBQUdkLGtEQUFFLENBQUNnQyxXQUFILENBQWVSLE9BQWYsQ0FBTDtBQUNELE9BSk0sTUFJQSxJQUFJMUMsS0FBSyxDQUFDVCxRQUFOLENBQWVFLElBQWYsS0FBd0IsU0FBNUIsRUFBdUM7QUFDNUMsWUFBTTBELENBQUMsR0FBRzNFLEtBQUssQ0FBQzRFLFVBQU4sQ0FBaUJwRCxLQUFLLENBQUNULFFBQU4sQ0FBZUMsS0FBaEMsQ0FBVjs7QUFDQSxZQUFJMkQsQ0FBSixFQUFPO0FBQ0w1RCxrQkFBUSxHQUFHNEQsQ0FBQyxDQUFDVixTQUFiO0FBQ0FSLGlCQUFPLEdBQUdwQyxTQUFTLENBQUN3RCxRQUFWLENBQW1CUCxNQUFuQixDQUEwQixVQUFBTixDQUFDO0FBQUEsbUJBQUlBLENBQUMsQ0FBQ1EsVUFBRixDQUFhQyxLQUFiLEtBQXVCMUQsUUFBM0I7QUFBQSxXQUEzQixFQUFnRSxDQUFoRSxDQUFWO0FBQ0F5QyxZQUFFLEdBQUdkLGtEQUFFLENBQUNnQyxXQUFILENBQWVqQixPQUFmLENBQUw7QUFDRCxTQUpELE1BSU87QUFDTDFDLGtCQUFRLEdBQUcsSUFBWDs7QUFDQSxjQUFJeUMsRUFBRSxDQUFDSSxNQUFILEtBQWMsQ0FBbEIsRUFBcUI7QUFDbkJKLGNBQUUsR0FBR04sRUFBTDtBQUNEO0FBQ0Y7QUFDRjs7QUFFRCxVQUFJNEIsSUFBSixFQUFVQyxPQUFWLEVBQW1CYixNQUFuQjtBQUVBYyxZQUFNOztBQUNOLGVBQVNBLE1BQVQsR0FBa0I7QUFDaEIsWUFBSTlCLEVBQUUsQ0FBQyxDQUFELENBQUYsS0FBVU0sRUFBRSxDQUFDLENBQUQsQ0FBWixJQUFtQk4sRUFBRSxDQUFDLENBQUQsQ0FBRixLQUFVTSxFQUFFLENBQUMsQ0FBRCxDQUEvQixJQUF1Q0EsRUFBRSxDQUFDLENBQUQsQ0FBRixJQUFTQSxFQUFFLENBQUMsQ0FBRCxDQUF0RCxFQUE0RDtBQUMxRHVCLGlCQUFPLEdBQUdyQyxrREFBRSxDQUFDYSxPQUFILENBQVdiLGtEQUFFLENBQUNDLGVBQUgsR0FBcUJDLFNBQXJCLENBQStCLENBQUMsQ0FBQyxFQUFELEVBQUssRUFBTCxDQUFELEVBQVcsQ0FBQ1AsS0FBSyxHQUFHLEVBQVQsRUFBYUEsS0FBSyxHQUFHLEVBQXJCLENBQVgsQ0FBL0IsRUFBcUVGLE1BQXJFLEVBQTZFZ0IsTUFBN0UsQ0FBb0YsQ0FBQyxDQUFDSyxFQUFFLENBQUMsQ0FBRCxDQUFKLEVBQVNoQyxLQUFLLENBQUNmLGFBQU4sR0FBc0IrQyxFQUFFLENBQUMsQ0FBRCxDQUFqQyxDQUFwRixDQUFYLEVBQXVJSixPQUF2SSxDQUFWO0FBQ0EsY0FBTTZCLENBQUMsR0FBR3ZDLGtEQUFFLENBQUN3QyxXQUFILENBQWV6QyxVQUFVLENBQUNVLE1BQVgsRUFBZixFQUFvQyxDQUFDLENBQUNLLEVBQUUsQ0FBQyxDQUFELENBQUosRUFBU2hDLEtBQUssQ0FBQ2YsYUFBTixHQUFzQitDLEVBQUUsQ0FBQyxDQUFELENBQWpDLENBQXBDLENBQVY7QUFDQXNCLGNBQUksR0FBR0MsT0FBTyxDQUFDRCxJQUFSLENBQWFyQixPQUFiLENBQVA7QUFDQVosZ0JBQU0sQ0FBQ3NDLFVBQVAsR0FDR3hFLFFBREgsQ0FDWWEsS0FBSyxDQUFDYixRQURsQixFQUVHeUUsS0FGSCxDQUVTLFFBRlQsRUFFbUIsWUFBVztBQUMxQixtQkFBTyxVQUFTQyxDQUFULEVBQVk7QUFDakI1Qyx3QkFBVSxDQUFDVSxNQUFYLENBQWtCOEIsQ0FBQyxDQUFDSSxDQUFELENBQW5CO0FBQ0Esa0JBQU1DLFdBQVcsR0FBRzdDLFVBQVUsQ0FBQ2UsRUFBRCxDQUE5QjtBQUNBSixxQkFBTyxDQUFDbUMsU0FBUixDQUFrQixDQUFsQixFQUFxQixDQUFyQixFQUF3QmxELEtBQXhCLEVBQStCQSxLQUEvQjtBQUNBZSxxQkFBTyxDQUFDb0MsU0FBUjtBQUNBbEMsa0JBQUksQ0FBQy9CLElBQUQsQ0FBSjtBQUNBNkIscUJBQU8sQ0FBQ3FDLFNBQVIsR0FBb0JqRSxLQUFLLENBQUNoQixVQUExQjtBQUNBNEMscUJBQU8sQ0FBQ3NDLElBQVI7O0FBQ0Esa0JBQUl4QixNQUFKLEVBQVk7QUFDVmQsdUJBQU8sQ0FBQ29DLFNBQVI7QUFDQWxDLG9CQUFJLENBQUNZLE1BQUQsQ0FBSjtBQUNBZCx1QkFBTyxDQUFDcUMsU0FBUixHQUFvQmpFLEtBQUssQ0FBQ2pCLGVBQTFCO0FBQ0E2Qyx1QkFBTyxDQUFDc0MsSUFBUjtBQUNELGVBTEQsTUFLTyxJQUFLakMsT0FBTyxJQUFJcUIsSUFBSSxHQUFHdEQsS0FBSyxDQUFDTixjQUF6QixJQUE2QyxDQUFDTSxLQUFLLENBQUNaLFVBQXhELEVBQXFFO0FBQzFFd0MsdUJBQU8sQ0FBQ29DLFNBQVI7QUFDQWxDLG9CQUFJLENBQUNHLE9BQUQsQ0FBSjtBQUNBTCx1QkFBTyxDQUFDcUMsU0FBUixHQUFvQmpFLEtBQUssQ0FBQ2pCLGVBQTFCO0FBQ0E2Qyx1QkFBTyxDQUFDc0MsSUFBUjtBQUNEOztBQUNELGtCQUFJbEUsS0FBSyxDQUFDVixRQUFWLEVBQW9CO0FBQ2xCc0MsdUJBQU8sQ0FBQ29DLFNBQVI7QUFDQWxDLG9CQUFJLENBQUN4QyxRQUFELENBQUo7QUFDQXNDLHVCQUFPLENBQUN1QyxXQUFSLENBQW9CbkUsS0FBSyxDQUFDTCxrQkFBMUI7QUFDQWlDLHVCQUFPLENBQUN3QyxXQUFSLEdBQXNCcEUsS0FBSyxDQUFDckIsbUJBQTVCO0FBQ0FpRCx1QkFBTyxDQUFDeUMsU0FBUixHQUFvQnJFLEtBQUssQ0FBQ25CLHNCQUExQjtBQUNBK0MsdUJBQU8sQ0FBQzBDLE1BQVI7QUFDRDs7QUFDRDFDLHFCQUFPLENBQUNvQyxTQUFSO0FBQXFCbEMsa0JBQUksQ0FBQ2hCLE9BQUQsQ0FBSjtBQUFlYyxxQkFBTyxDQUFDdUMsV0FBUixDQUFvQixFQUFwQjtBQUF5QnZDLHFCQUFPLENBQUN3QyxXQUFSLEdBQXNCcEUsS0FBSyxDQUFDckIsbUJBQTVCO0FBQWlEaUQscUJBQU8sQ0FBQ3lDLFNBQVIsR0FBb0JyRSxLQUFLLENBQUNuQixzQkFBMUI7QUFBa0QrQyxxQkFBTyxDQUFDMEMsTUFBUjs7QUFDaEssa0JBQUl0RSxLQUFLLENBQUNaLFVBQU4sSUFBb0JrRSxJQUFJLEdBQUd0RCxLQUFLLENBQUNOLGNBQXJDLEVBQXFEO0FBQ25Ea0MsdUJBQU8sQ0FBQ29DLFNBQVI7QUFDQXBDLHVCQUFPLENBQUMyQyxHQUFSLENBQVlULFdBQVcsQ0FBQyxDQUFELENBQXZCLEVBQTRCQSxXQUFXLENBQUMsQ0FBRCxDQUF2QyxFQUE0QzlELEtBQUssQ0FBQ1gsVUFBbEQsRUFBOEQsQ0FBOUQsRUFBaUUsSUFBSW1GLElBQUksQ0FBQ0MsRUFBMUU7QUFDQTdDLHVCQUFPLENBQUN3QyxXQUFSLEdBQXNCcEUsS0FBSyxDQUFDakIsZUFBNUI7QUFDQTZDLHVCQUFPLENBQUN5QyxTQUFSLEdBQW9CckUsS0FBSyxDQUFDWCxVQUFOLEdBQW1CLENBQXZDO0FBQ0F1Qyx1QkFBTyxDQUFDMEMsTUFBUjtBQUNEOztBQUNEMUMscUJBQU8sQ0FBQ29DLFNBQVI7QUFDQWxDLGtCQUFJLENBQUNuQixNQUFELENBQUo7QUFDQWlCLHFCQUFPLENBQUN3QyxXQUFSLEdBQXNCcEUsS0FBSyxDQUFDcEIsa0JBQTVCO0FBQ0FnRCxxQkFBTyxDQUFDeUMsU0FBUixHQUFvQnJFLEtBQUssQ0FBQ2xCLG1CQUExQjtBQUNBOEMscUJBQU8sQ0FBQzBDLE1BQVI7QUFDRCxhQXhDRDtBQXlDRCxXQTVDSDtBQTZDRCxTQWpERCxNQWlETztBQUNMMUMsaUJBQU8sQ0FBQ21DLFNBQVIsQ0FBa0IsQ0FBbEIsRUFBcUIsQ0FBckIsRUFBd0JsRCxLQUF4QixFQUErQkEsS0FBL0I7QUFDQWUsaUJBQU8sQ0FBQ29DLFNBQVI7QUFDQWxDLGNBQUksQ0FBQy9CLElBQUQsQ0FBSjtBQUNBNkIsaUJBQU8sQ0FBQ3FDLFNBQVIsR0FBb0JqRSxLQUFLLENBQUNoQixVQUExQjtBQUNBNEMsaUJBQU8sQ0FBQ3NDLElBQVI7O0FBQ0EsY0FBSWxFLEtBQUssQ0FBQ1YsUUFBVixFQUFvQjtBQUNsQnNDLG1CQUFPLENBQUNvQyxTQUFSO0FBQXFCbEMsZ0JBQUksQ0FBQ3hDLFFBQUQsQ0FBSjtBQUNyQnNDLG1CQUFPLENBQUN1QyxXQUFSLENBQW9CbkUsS0FBSyxDQUFDTCxrQkFBMUI7QUFDQWlDLG1CQUFPLENBQUN3QyxXQUFSLEdBQXNCcEUsS0FBSyxDQUFDckIsbUJBQTVCO0FBQ0FpRCxtQkFBTyxDQUFDeUMsU0FBUixHQUFvQnJFLEtBQUssQ0FBQ25CLHNCQUExQjtBQUNBK0MsbUJBQU8sQ0FBQzBDLE1BQVI7QUFDRDs7QUFDRDFDLGlCQUFPLENBQUNvQyxTQUFSO0FBQ0FsQyxjQUFJLENBQUNoQixPQUFELENBQUo7QUFDQWMsaUJBQU8sQ0FBQ3VDLFdBQVIsQ0FBb0IsRUFBcEI7QUFDQXZDLGlCQUFPLENBQUN3QyxXQUFSLEdBQXNCcEUsS0FBSyxDQUFDckIsbUJBQTVCO0FBQ0FpRCxpQkFBTyxDQUFDeUMsU0FBUixHQUFvQnJFLEtBQUssQ0FBQ25CLHNCQUExQjtBQUNBK0MsaUJBQU8sQ0FBQzBDLE1BQVI7QUFDQTFDLGlCQUFPLENBQUNvQyxTQUFSO0FBQ0FsQyxjQUFJLENBQUNuQixNQUFELENBQUo7QUFDQWlCLGlCQUFPLENBQUN3QyxXQUFSLEdBQXNCcEUsS0FBSyxDQUFDcEIsa0JBQTVCO0FBQ0FnRCxpQkFBTyxDQUFDeUMsU0FBUixHQUFvQnJFLEtBQUssQ0FBQ2xCLG1CQUExQjtBQUNBOEMsaUJBQU8sQ0FBQzBDLE1BQVI7QUFDRDtBQUNGOztBQUFBO0FBRURqRCxZQUFNLENBQUNFLElBQVAsQ0FBWSxZQUFaLEVBQTBCUyxFQUFFLENBQUMsQ0FBRCxDQUE1QjtBQUNBWCxZQUFNLENBQUNFLElBQVAsQ0FBWSxZQUFaLEVBQTBCUyxFQUFFLENBQUMsQ0FBRCxDQUE1QjtBQUVBLGFBQU8sSUFBUDtBQUNEOzs7O0VBbEt3QjBDLDREOztBQXFLWmhHLDJFQUFmIiwiZmlsZSI6Ii4vc3JjL2xpYi9jaGFydC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHRvcG9qc29uIGZyb20gJ3RvcG9qc29uLWNsaWVudCc7XG5cbmltcG9ydCBBdGxhc01ldGFkYXRhQ2xpZW50IGZyb20gJ0ByZXV0ZXJzLWdyYXBoaWNzL2dyYXBoaWNzLWF0bGFzLWNsaWVudCc7XG5pbXBvcnQgQ2hhcnRDb21wb25lbnQgZnJvbSAnLi9iYXNlL0NoYXJ0Q29tcG9uZW50JztcbmltcG9ydCBkMyBmcm9tICcuL3V0aWxzL2QzJztcbmltcG9ydCB7IGluZGV4T2YgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHdvcmxkIGZyb20gJy4vdG9wby5qcyc7XG5cbmNvbnN0IEF0bGFzID0gbmV3IEF0bGFzTWV0YWRhdGFDbGllbnQoKTtcblxuY2xhc3MgR2xvYmV0cm90dGVyIGV4dGVuZHMgQ2hhcnRDb21wb25lbnQge1xuICBkZWZhdWx0UHJvcHMgPSB7XG4gICAgYm9yZGVyX3N0cm9rZV9jb2xvcjogJyMyZjM1M2YnLFxuICAgIG91dGVyX3N0cm9rZV9jb2xvcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC41KScsXG4gICAgc3Ryb2tlX3dpZHRoX2NvdW50cmllczogMC41LFxuICAgIHN0cm9rZV93aWR0aF9zcGhlcmU6IDAuMSxcbiAgICBoaWdobGlnaHRfY29sb3I6ICcjZmNlNTg3JyxcbiAgICBiYXNlX2NvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpJyxcbiAgICB2ZXJ0aWNhbF90aWx0OiAxNSxcbiAgICBtYXJnaW46IDEwLFxuICAgIGR1cmF0aW9uOiA3NTAsXG4gICAgZW5hYmxlX2RvdDogdHJ1ZSxcbiAgICBkb3RfcmFkaXVzOiA1LFxuICAgIGRpc3B1dGVkOiB0cnVlLFxuICAgIGxvY2F0aW9uOiB7IHZhbHVlOiBmYWxzZSwgdHlwZTogJ2NvdW50cnknIH0sIC8vIE90aGVyIHR5cGVzIGFyZSBwb2ludCBhbmQgcmVnaW9uXG4gICAgYXJlYV90aHJlc2hvbGQ6IDEwLFxuICAgIGRpc3B1dGVkX2Rhc2hhcnJheTogWzUsIDVdLFxuICAgIHRvcG9qc29uRmVhdHVyZXM6IHtcbiAgICAgIGNvdW50cmllczogJ2NvdW50cmllcycsXG4gICAgICBkaXNwdXRlZEJvdW5kYXJpZXM6ICdkaXNwdXRlZEJvdW5kYXJpZXMnLFxuICAgICAgbGFuZDogJ2xhbmQnLFxuICAgIH0sXG4gIH1cblxuICBkcmF3KCkge1xuICAgIGNvbnN0IHByb3BzID0gdGhpcy5wcm9wcygpO1xuICAgIGNvbnN0IHRvcG9sb2d5ID0gdGhpcy50b3BvanNvbigpO1xuICAgIGNvbnNvbGUubG9nKHRvcG9sb2d5Lm9iamVjdHMpO1xuICAgIGNvbnN0IGNvdW50cmllc0ZlYXR1cmVzID0gdG9wb2xvZ3kub2JqZWN0c1twcm9wcy50b3BvanNvbkZlYXR1cmVzLmNvdW50cmllc107XG4gICAgY29uc3QgZGlzcHV0ZWRCb3VuZGFyaWVzRmVhdHVyZXMgPSB0b3BvbG9neS5vYmplY3RzW3Byb3BzLnRvcG9qc29uRmVhdHVyZXMuZGlzcHV0ZWRCb3VuZGFyaWVzXTtcbiAgICBjb25zdCBsYW5kRmVhdHVyZXMgPSB0b3BvbG9neS5vYmplY3RzW3Byb3BzLnRvcG9qc29uRmVhdHVyZXMubGFuZF07XG4gICAgY29uc3Qgbm9kZSA9IHRoaXMuc2VsZWN0aW9uKCkubm9kZSgpO1xuICAgIGNvbnN0IHNwaGVyZSA9IHsgdHlwZTogJ1NwaGVyZScgfTtcbiAgICBjb25zdCB7IHdpZHRoIH0gPSBub2RlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IGNvdW50cmllcyA9IHRvcG9qc29uLmZlYXR1cmUodG9wb2xvZ3ksIGNvdW50cmllc0ZlYXR1cmVzKTtcbiAgICBjb25zdCBib3JkZXJzID0gdG9wb2pzb24ubWVzaCh0b3BvbG9neSwgY291bnRyaWVzRmVhdHVyZXMsIChhLCBiKSA9PiBhICE9PSBiKTtcbiAgICBjb25zdCBkaXNwdXRlZCA9IHRvcG9qc29uLm1lc2godG9wb2xvZ3ksIGRpc3B1dGVkQm91bmRhcmllc0ZlYXR1cmVzKTtcbiAgICBjb25zdCBsYW5kID0gdG9wb2pzb24uZmVhdHVyZSh0b3BvbG9neSwgbGFuZEZlYXR1cmVzKTtcbiAgICBjb25zdCBwcm9qZWN0aW9uID0gZDMuZ2VvT3J0aG9ncmFwaGljKCkuZml0RXh0ZW50KFtbMTAsIDEwXSwgW3dpZHRoIC0gMTAsIHdpZHRoIC0gMTBdXSwgc3BoZXJlKTtcblxuICAgIHZhciBjYW52YXMgPSB0aGlzLnNlbGVjdGlvbigpLmFwcGVuZFNlbGVjdCgnY2FudmFzJylcbiAgICAgIC5hdHRyKCd3aWR0aCcsIHdpZHRoKVxuICAgICAgLmF0dHIoJ2hlaWdodCcsIHdpZHRoKTtcblxuICAgIGNvbnN0IHggPSBjYW52YXMuYXR0cignY2VudHJvaWQteCcpO1xuICAgIGNvbnN0IHkgPSBjYW52YXMuYXR0cignY2VudHJvaWQteScpO1xuICAgIGNvbnN0IHAxID0gWy14LCBwcm9wcy52ZXJ0aWNhbF90aWx0IC0geV07XG5cbiAgICBpZiAoeCAmJiB5KSB7XG4gICAgICBwcm9qZWN0aW9uLnJvdGF0ZShwMSk7XG4gICAgfVxuXG4gICAgY29uc3QgY29udGV4dCA9IGNhbnZhcy5ub2RlKCkuZ2V0Q29udGV4dCgnMmQnKTtcblxuICAgIGNvbnN0IHBhdGggPSBkMy5nZW9QYXRoKHByb2plY3Rpb24sIGNvbnRleHQpO1xuXG4gICAgbGV0IHAyID0gW107IGxldCBsb2NhdGlvbjsgbGV0IGNvdW50cnk7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkocHJvcHMubG9jYXRpb24udmFsdWUpICYmIHByb3BzLmxvY2F0aW9uLnZhbHVlLmxlbmd0aCA9PT0gMiAmJiBwcm9wcy5sb2NhdGlvbi50eXBlID09PSAncG9pbnQnKSB7XG4gICAgICBwMlswXSA9IHByb3BzLmxvY2F0aW9uLnZhbHVlWzBdO1xuICAgICAgcDJbMV0gPSBwcm9wcy5sb2NhdGlvbi52YWx1ZVsxXTtcbiAgICB9IGVsc2UgaWYgKHByb3BzLmxvY2F0aW9uLnR5cGUgPT09ICdyZWdpb24nKSB7XG4gICAgICBjb25zdCBjb3VudHJ5TGlzdCA9IChBdGxhcy5nZXRSZWdpb24ocHJvcHMubG9jYXRpb24udmFsdWUpLmNvdW50cmllcykubWFwKGQgPT4gZC5pc29BbHBoYTMpO1xuICAgICAgY29uc3QgbWVyZ2VkID0gdG9wb2pzb24ubWVyZ2Uod29ybGQsIHdvcmxkLm9iamVjdHMuZ2FkbS5nZW9tZXRyaWVzLmZpbHRlcihmdW5jdGlvbihkKSB7IHJldHVybiBpbmRleE9mKGNvdW50cnlMaXN0LCBkLnByb3BlcnRpZXMuR0lEXzApID4gLTE7IH0pKTtcbiAgICAgIHAyID0gZDMuZ2VvQ2VudHJvaWQobWVyZ2VkKTtcbiAgICB9IGVsc2UgaWYgKHByb3BzLmxvY2F0aW9uLnR5cGUgPT09ICdjb3VudHJ5Jykge1xuICAgICAgY29uc3QgbCA9IEF0bGFzLmdldENvdW50cnkocHJvcHMubG9jYXRpb24udmFsdWUpO1xuICAgICAgaWYgKGwpIHtcbiAgICAgICAgbG9jYXRpb24gPSBsLmlzb0FscGhhMztcbiAgICAgICAgY291bnRyeSA9IGNvdW50cmllcy5mZWF0dXJlcy5maWx0ZXIoZCA9PiBkLnByb3BlcnRpZXMuR0lEXzAgPT09IGxvY2F0aW9uKVswXTtcbiAgICAgICAgcDIgPSBkMy5nZW9DZW50cm9pZChjb3VudHJ5KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxvY2F0aW9uID0gJ05BJztcbiAgICAgICAgaWYgKHAyLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIHAyID0gcDE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgYXJlYSwgZW5kUGF0aCwgbWVyZ2VkO1xuXG4gICAgcmVuZGVyKCk7XG4gICAgZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgaWYgKHAxWzBdICE9PSBwMlswXSAmJiBwMVsxXSAhPT0gcDJbMV0gJiYgKHAyWzBdICYmIHAyWzFdKSkge1xuICAgICAgICBlbmRQYXRoID0gZDMuZ2VvUGF0aChkMy5nZW9PcnRob2dyYXBoaWMoKS5maXRFeHRlbnQoW1sxMCwgMTBdLCBbd2lkdGggLSAxMCwgd2lkdGggLSAxMF1dLCBzcGhlcmUpLnJvdGF0ZShbLXAyWzBdLCBwcm9wcy52ZXJ0aWNhbF90aWx0IC0gcDJbMV1dKSwgY29udGV4dCk7XG4gICAgICAgIGNvbnN0IHIgPSBkMy5pbnRlcnBvbGF0ZShwcm9qZWN0aW9uLnJvdGF0ZSgpLCBbLXAyWzBdLCBwcm9wcy52ZXJ0aWNhbF90aWx0IC0gcDJbMV1dKTtcbiAgICAgICAgYXJlYSA9IGVuZFBhdGguYXJlYShjb3VudHJ5KTtcbiAgICAgICAgY2FudmFzLnRyYW5zaXRpb24oKVxuICAgICAgICAgIC5kdXJhdGlvbihwcm9wcy5kdXJhdGlvbilcbiAgICAgICAgICAudHdlZW4oJ3JvdGF0ZScsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICAgICAgcHJvamVjdGlvbi5yb3RhdGUocih0KSk7XG4gICAgICAgICAgICAgIGNvbnN0IGNlbnRyb2lkUHJvID0gcHJvamVjdGlvbihwMik7XG4gICAgICAgICAgICAgIGNvbnRleHQuY2xlYXJSZWN0KDAsIDAsIHdpZHRoLCB3aWR0aCk7XG4gICAgICAgICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICAgIHBhdGgobGFuZCk7XG4gICAgICAgICAgICAgIGNvbnRleHQuZmlsbFN0eWxlID0gcHJvcHMuYmFzZV9jb2xvcjtcbiAgICAgICAgICAgICAgY29udGV4dC5maWxsKCk7XG4gICAgICAgICAgICAgIGlmIChtZXJnZWQpIHtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgICAgIHBhdGgobWVyZ2VkKTtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IHByb3BzLmhpZ2hsaWdodF9jb2xvcjtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmZpbGwoKTtcbiAgICAgICAgICAgICAgfSBlbHNlIGlmICgoY291bnRyeSAmJiBhcmVhID4gcHJvcHMuYXJlYV90aHJlc2hvbGQpIHx8ICghcHJvcHMuZW5hYmxlX2RvdCkpIHtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgICAgIHBhdGgoY291bnRyeSk7XG4gICAgICAgICAgICAgICAgY29udGV4dC5maWxsU3R5bGUgPSBwcm9wcy5oaWdobGlnaHRfY29sb3I7XG4gICAgICAgICAgICAgICAgY29udGV4dC5maWxsKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgaWYgKHByb3BzLmRpc3B1dGVkKSB7XG4gICAgICAgICAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgICAgICBwYXRoKGRpc3B1dGVkKTtcbiAgICAgICAgICAgICAgICBjb250ZXh0LnNldExpbmVEYXNoKHByb3BzLmRpc3B1dGVkX2Rhc2hhcnJheSk7XG4gICAgICAgICAgICAgICAgY29udGV4dC5zdHJva2VTdHlsZSA9IHByb3BzLmJvcmRlcl9zdHJva2VfY29sb3I7XG4gICAgICAgICAgICAgICAgY29udGV4dC5saW5lV2lkdGggPSBwcm9wcy5zdHJva2Vfd2lkdGhfY291bnRyaWVzO1xuICAgICAgICAgICAgICAgIGNvbnRleHQuc3Ryb2tlKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTsgcGF0aChib3JkZXJzKTsgY29udGV4dC5zZXRMaW5lRGFzaChbXSk7IGNvbnRleHQuc3Ryb2tlU3R5bGUgPSBwcm9wcy5ib3JkZXJfc3Ryb2tlX2NvbG9yOyBjb250ZXh0LmxpbmVXaWR0aCA9IHByb3BzLnN0cm9rZV93aWR0aF9jb3VudHJpZXM7IGNvbnRleHQuc3Ryb2tlKCk7XG4gICAgICAgICAgICAgIGlmIChwcm9wcy5lbmFibGVfZG90ICYmIGFyZWEgPCBwcm9wcy5hcmVhX3RocmVzaG9sZCkge1xuICAgICAgICAgICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICAgICAgY29udGV4dC5hcmMoY2VudHJvaWRQcm9bMF0sIGNlbnRyb2lkUHJvWzFdLCBwcm9wcy5kb3RfcmFkaXVzLCAwLCAyICogTWF0aC5QSSk7XG4gICAgICAgICAgICAgICAgY29udGV4dC5zdHJva2VTdHlsZSA9IHByb3BzLmhpZ2hsaWdodF9jb2xvcjtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmxpbmVXaWR0aCA9IHByb3BzLmRvdF9yYWRpdXMgLSAyO1xuICAgICAgICAgICAgICAgIGNvbnRleHQuc3Ryb2tlKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgICAgcGF0aChzcGhlcmUpO1xuICAgICAgICAgICAgICBjb250ZXh0LnN0cm9rZVN0eWxlID0gcHJvcHMub3V0ZXJfc3Ryb2tlX2NvbG9yO1xuICAgICAgICAgICAgICBjb250ZXh0LmxpbmVXaWR0aCA9IHByb3BzLnN0cm9rZV93aWR0aF9zcGhlcmU7XG4gICAgICAgICAgICAgIGNvbnRleHQuc3Ryb2tlKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29udGV4dC5jbGVhclJlY3QoMCwgMCwgd2lkdGgsIHdpZHRoKTtcbiAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgcGF0aChsYW5kKTtcbiAgICAgICAgY29udGV4dC5maWxsU3R5bGUgPSBwcm9wcy5iYXNlX2NvbG9yO1xuICAgICAgICBjb250ZXh0LmZpbGwoKTtcbiAgICAgICAgaWYgKHByb3BzLmRpc3B1dGVkKSB7XG4gICAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTsgcGF0aChkaXNwdXRlZCk7XG4gICAgICAgICAgY29udGV4dC5zZXRMaW5lRGFzaChwcm9wcy5kaXNwdXRlZF9kYXNoYXJyYXkpO1xuICAgICAgICAgIGNvbnRleHQuc3Ryb2tlU3R5bGUgPSBwcm9wcy5ib3JkZXJfc3Ryb2tlX2NvbG9yO1xuICAgICAgICAgIGNvbnRleHQubGluZVdpZHRoID0gcHJvcHMuc3Ryb2tlX3dpZHRoX2NvdW50cmllcztcbiAgICAgICAgICBjb250ZXh0LnN0cm9rZSgpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgIHBhdGgoYm9yZGVycyk7XG4gICAgICAgIGNvbnRleHQuc2V0TGluZURhc2goW10pO1xuICAgICAgICBjb250ZXh0LnN0cm9rZVN0eWxlID0gcHJvcHMuYm9yZGVyX3N0cm9rZV9jb2xvcjtcbiAgICAgICAgY29udGV4dC5saW5lV2lkdGggPSBwcm9wcy5zdHJva2Vfd2lkdGhfY291bnRyaWVzO1xuICAgICAgICBjb250ZXh0LnN0cm9rZSgpO1xuICAgICAgICBjb250ZXh0LmJlZ2luUGF0aCgpO1xuICAgICAgICBwYXRoKHNwaGVyZSk7XG4gICAgICAgIGNvbnRleHQuc3Ryb2tlU3R5bGUgPSBwcm9wcy5vdXRlcl9zdHJva2VfY29sb3I7XG4gICAgICAgIGNvbnRleHQubGluZVdpZHRoID0gcHJvcHMuc3Ryb2tlX3dpZHRoX3NwaGVyZTtcbiAgICAgICAgY29udGV4dC5zdHJva2UoKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgY2FudmFzLmF0dHIoJ2NlbnRyb2lkLXgnLCBwMlswXSk7XG4gICAgY2FudmFzLmF0dHIoJ2NlbnRyb2lkLXknLCBwMlsxXSk7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBHbG9iZXRyb3R0ZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/lib/chart.js\n");

/***/ })

})