webpackHotUpdate("static/development/pages/index.js",{

/***/ "./src/lib/chart.js":
/*!**************************!*\
  !*** ./src/lib/chart.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var topojson_client__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! topojson-client */ \"./node_modules/topojson-client/src/index.js\");\n/* harmony import */ var _reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @reuters-graphics/graphics-atlas-client */ \"./node_modules/@reuters-graphics/graphics-atlas-client/dist/index.js\");\n/* harmony import */ var _reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _base_ChartComponent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./base/ChartComponent */ \"./src/lib/base/ChartComponent.js\");\n/* harmony import */ var _utils_d3__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/d3 */ \"./src/lib/utils/d3.js\");\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar Atlas = new _reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_8___default.a();\n\nvar Globetrotter = /*#__PURE__*/function (_ChartComponent) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Globetrotter, _ChartComponent);\n\n  var _super = _createSuper(Globetrotter);\n\n  function Globetrotter() {\n    var _this;\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Globetrotter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"defaultProps\", {\n      border_stroke_color: '#2f353f',\n      outer_stroke_color: 'rgba(255, 255, 255, 0.5)',\n      stroke_width_countries: 0.5,\n      stroke_width_sphere: 0.1,\n      highlight_color: '#fce587',\n      base_color: 'rgba(255, 255, 255, 0.2)',\n      vertical_tilt: 15,\n      margin: 10,\n      duration: 750,\n      enable_dot: true,\n      dot_radius: 5,\n      disputed: true,\n      area_threshold: 10,\n      disputed_dasharray: [5, 5],\n      topojsonFeatures: {\n        countries: 'countries',\n        disputedBoundaries: 'disputedBoundaries',\n        land: 'land'\n      },\n      spin: false,\n      countryIdGetter: function countryIdGetter(properties) {\n        return properties.isoAlpha3;\n      }\n    });\n\n    return _this;\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Globetrotter, [{\n    key: \"draw\",\n    value: function draw() {\n      var props = this.props();\n      var topology = this.topojson();\n      var location = this.location();\n      var countriesFeatures = topology.objects[props.topojsonFeatures.countries];\n      var disputedBoundariesFeatures = topology.objects[props.topojsonFeatures.disputedBoundaries];\n      var landFeatures = topology.objects[props.topojsonFeatures.land];\n      var node = this.selection().node();\n      var sphere = {\n        type: 'Sphere'\n      };\n\n      var _node$getBoundingClie = node.getBoundingClientRect(),\n          width = _node$getBoundingClie.width;\n\n      var countries = topojson_client__WEBPACK_IMPORTED_MODULE_7__[\"feature\"](topology, countriesFeatures);\n      var borders = topojson_client__WEBPACK_IMPORTED_MODULE_7__[\"mesh\"](topology, countriesFeatures, function (a, b) {\n        return a !== b;\n      });\n      var disputed = topojson_client__WEBPACK_IMPORTED_MODULE_7__[\"mesh\"](topology, disputedBoundariesFeatures);\n      var land = topojson_client__WEBPACK_IMPORTED_MODULE_7__[\"feature\"](topology, landFeatures);\n      var projection = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].geoOrthographic().fitExtent([[10, 10], [width - 10, width - 10]], sphere);\n      var canvas = this.selection().appendSelect('canvas').attr('width', width).attr('height', width);\n      var x = canvas.attr('centroid-x');\n      var y = canvas.attr('centroid-y');\n      var p1 = [-x, props.vertical_tilt - y];\n\n      if (x && y) {\n        projection.rotate(p1);\n      }\n\n      if (props.spin) {\n        if (this._time) this._timer.stop();\n        this._timer = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].timer(function (elapsed) {\n          console.log('FIRES');\n          projection.rotate([0.02 * elapsed, props.vertical_tilt - y]);\n          render();\n        });\n      }\n\n      var context = canvas.node().getContext('2d');\n      var path = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].geoPath(projection, context);\n      var p2 = [];\n      var country;\n      var merged;\n\n      if (Array.isArray(location) && location.length === 2) {\n        p2[0] = location[0];\n        p2[1] = location[1];\n      } else if (Atlas.getRegion(location)) {\n        var countryList = Atlas.getRegion(location).countries.map(function (d) {\n          return d.isoAlpha3;\n        });\n        merged = topojson_client__WEBPACK_IMPORTED_MODULE_7__[\"merge\"](topology, countriesFeatures.geometries.filter(function (d) {\n          return countryList.includes(props.countryIdGetter(d.properties));\n        }));\n        p2 = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].geoCentroid(merged);\n      } else if (Atlas.getSubregion(location)) {\n        var _countryList = Atlas.getSubregion(location).countries.map(function (d) {\n          return d.isoAlpha3;\n        });\n\n        merged = topojson_client__WEBPACK_IMPORTED_MODULE_7__[\"merge\"](topology, countriesFeatures.geometries.filter(function (d) {\n          return _countryList.includes(props.countryIdGetter(d.properties));\n        }));\n        p2 = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].geoCentroid(merged);\n      } else if (Atlas.getCountry(location)) {\n        var _Atlas$getCountry = Atlas.getCountry(location),\n            isoAlpha3 = _Atlas$getCountry.isoAlpha3;\n\n        country = countries.features.filter(function (d) {\n          return props.countryIdGetter(d.properties) === isoAlpha3;\n        })[0];\n        p2 = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].geoCentroid(country);\n      }\n\n      var area, endPath;\n      render();\n\n      function render() {\n        if (p1[0] !== p2[0] && p1[1] !== p2[1] && p2[0] && p2[1]) {\n          endPath = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].geoPath(_utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].geoOrthographic().fitExtent([[10, 10], [width - 10, width - 10]], sphere).rotate([-p2[0], props.vertical_tilt - p2[1]]), context);\n          var r = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].interpolate(projection.rotate(), [-p2[0], props.vertical_tilt - p2[1]]);\n          area = endPath.area(country);\n          canvas.transition().duration(props.duration).tween('rotate', function () {\n            return function (t) {\n              projection.rotate(r(t));\n              var centroidPro = projection(p2);\n              context.clearRect(0, 0, width, width);\n              context.beginPath();\n              path(land);\n              context.fillStyle = props.base_color;\n              context.fill();\n\n              if (merged) {\n                context.beginPath();\n                path(merged);\n                context.fillStyle = props.highlight_color;\n                context.fill();\n              } else if (country && area > props.area_threshold || !props.enable_dot) {\n                context.beginPath();\n                path(country);\n                context.fillStyle = props.highlight_color;\n                context.fill();\n              }\n\n              if (props.disputed) {\n                context.beginPath();\n                path(disputed);\n                context.setLineDash(props.disputed_dasharray);\n                context.strokeStyle = props.border_stroke_color;\n                context.lineWidth = props.stroke_width_countries;\n                context.stroke();\n              }\n\n              context.beginPath();\n              path(borders);\n              context.setLineDash([]);\n              context.strokeStyle = props.border_stroke_color;\n              context.lineWidth = props.stroke_width_countries;\n              context.stroke();\n\n              if (props.enable_dot && area < props.area_threshold) {\n                context.beginPath();\n                context.arc(centroidPro[0], centroidPro[1], props.dot_radius, 0, 2 * Math.PI);\n                context.strokeStyle = props.highlight_color;\n                context.lineWidth = props.dot_radius - 2;\n                context.stroke();\n              }\n\n              context.beginPath();\n              path(sphere);\n              context.strokeStyle = props.outer_stroke_color;\n              context.lineWidth = props.stroke_width_sphere;\n              context.stroke();\n            };\n          });\n        } else {\n          context.clearRect(0, 0, width, width);\n          context.beginPath();\n          path(countries);\n          context.fillStyle = props.base_color;\n          context.fill();\n\n          if (props.disputed) {\n            context.beginPath();\n            path(disputed);\n            context.setLineDash(props.disputed_dasharray);\n            context.strokeStyle = props.border_stroke_color;\n            context.lineWidth = props.stroke_width_countries;\n            context.stroke();\n          }\n\n          context.beginPath();\n          path(borders);\n          context.setLineDash([]);\n          context.strokeStyle = props.border_stroke_color;\n          context.lineWidth = props.stroke_width_countries;\n          context.stroke();\n          context.beginPath();\n          path(sphere);\n          context.strokeStyle = props.outer_stroke_color;\n          context.lineWidth = props.stroke_width_sphere;\n          context.stroke();\n        }\n      }\n\n      ;\n      canvas.attr('centroid-x', p2[0]);\n      canvas.attr('centroid-y', p2[1]);\n      return this;\n    }\n  }]);\n\n  return Globetrotter;\n}(_base_ChartComponent__WEBPACK_IMPORTED_MODULE_9__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Globetrotter);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL2NoYXJ0LmpzPzdiYjgiXSwibmFtZXMiOlsiQXRsYXMiLCJBdGxhc01ldGFkYXRhQ2xpZW50IiwiR2xvYmV0cm90dGVyIiwiYm9yZGVyX3N0cm9rZV9jb2xvciIsIm91dGVyX3N0cm9rZV9jb2xvciIsInN0cm9rZV93aWR0aF9jb3VudHJpZXMiLCJzdHJva2Vfd2lkdGhfc3BoZXJlIiwiaGlnaGxpZ2h0X2NvbG9yIiwiYmFzZV9jb2xvciIsInZlcnRpY2FsX3RpbHQiLCJtYXJnaW4iLCJkdXJhdGlvbiIsImVuYWJsZV9kb3QiLCJkb3RfcmFkaXVzIiwiZGlzcHV0ZWQiLCJhcmVhX3RocmVzaG9sZCIsImRpc3B1dGVkX2Rhc2hhcnJheSIsInRvcG9qc29uRmVhdHVyZXMiLCJjb3VudHJpZXMiLCJkaXNwdXRlZEJvdW5kYXJpZXMiLCJsYW5kIiwic3BpbiIsImNvdW50cnlJZEdldHRlciIsInByb3BlcnRpZXMiLCJpc29BbHBoYTMiLCJwcm9wcyIsInRvcG9sb2d5IiwidG9wb2pzb24iLCJsb2NhdGlvbiIsImNvdW50cmllc0ZlYXR1cmVzIiwib2JqZWN0cyIsImRpc3B1dGVkQm91bmRhcmllc0ZlYXR1cmVzIiwibGFuZEZlYXR1cmVzIiwibm9kZSIsInNlbGVjdGlvbiIsInNwaGVyZSIsInR5cGUiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ3aWR0aCIsImJvcmRlcnMiLCJhIiwiYiIsInByb2plY3Rpb24iLCJkMyIsImdlb09ydGhvZ3JhcGhpYyIsImZpdEV4dGVudCIsImNhbnZhcyIsImFwcGVuZFNlbGVjdCIsImF0dHIiLCJ4IiwieSIsInAxIiwicm90YXRlIiwiX3RpbWUiLCJfdGltZXIiLCJzdG9wIiwidGltZXIiLCJlbGFwc2VkIiwiY29uc29sZSIsImxvZyIsInJlbmRlciIsImNvbnRleHQiLCJnZXRDb250ZXh0IiwicGF0aCIsImdlb1BhdGgiLCJwMiIsImNvdW50cnkiLCJtZXJnZWQiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJnZXRSZWdpb24iLCJjb3VudHJ5TGlzdCIsIm1hcCIsImQiLCJnZW9tZXRyaWVzIiwiZmlsdGVyIiwiaW5jbHVkZXMiLCJnZW9DZW50cm9pZCIsImdldFN1YnJlZ2lvbiIsImdldENvdW50cnkiLCJmZWF0dXJlcyIsImFyZWEiLCJlbmRQYXRoIiwiciIsImludGVycG9sYXRlIiwidHJhbnNpdGlvbiIsInR3ZWVuIiwidCIsImNlbnRyb2lkUHJvIiwiY2xlYXJSZWN0IiwiYmVnaW5QYXRoIiwiZmlsbFN0eWxlIiwiZmlsbCIsInNldExpbmVEYXNoIiwic3Ryb2tlU3R5bGUiLCJsaW5lV2lkdGgiLCJzdHJva2UiLCJhcmMiLCJNYXRoIiwiUEkiLCJDaGFydENvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBRUEsSUFBTUEsS0FBSyxHQUFHLElBQUlDLDhFQUFKLEVBQWQ7O0lBRU1DLFk7Ozs7Ozs7Ozs7Ozs7Ozs7dU5BQ1c7QUFDYkMseUJBQW1CLEVBQUUsU0FEUjtBQUViQyx3QkFBa0IsRUFBRSwwQkFGUDtBQUdiQyw0QkFBc0IsRUFBRSxHQUhYO0FBSWJDLHlCQUFtQixFQUFFLEdBSlI7QUFLYkMscUJBQWUsRUFBRSxTQUxKO0FBTWJDLGdCQUFVLEVBQUUsMEJBTkM7QUFPYkMsbUJBQWEsRUFBRSxFQVBGO0FBUWJDLFlBQU0sRUFBRSxFQVJLO0FBU2JDLGNBQVEsRUFBRSxHQVRHO0FBVWJDLGdCQUFVLEVBQUUsSUFWQztBQVdiQyxnQkFBVSxFQUFFLENBWEM7QUFZYkMsY0FBUSxFQUFFLElBWkc7QUFhYkMsb0JBQWMsRUFBRSxFQWJIO0FBY2JDLHdCQUFrQixFQUFFLENBQUMsQ0FBRCxFQUFJLENBQUosQ0FkUDtBQWViQyxzQkFBZ0IsRUFBRTtBQUNoQkMsaUJBQVMsRUFBRSxXQURLO0FBRWhCQywwQkFBa0IsRUFBRSxvQkFGSjtBQUdoQkMsWUFBSSxFQUFFO0FBSFUsT0FmTDtBQW9CYkMsVUFB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LENBQUQsQ0FBNUI7QUFFQSxhQUFPLElBQVA7QUFDRDs7OztFQXZLd0JvQyw0RDs7QUEwS1puRywyRUFBZiIsImZpbGUiOiIuL3NyYy9saWIvY2hhcnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0b3BvanNvbiBmcm9tICd0b3BvanNvbi1jbGllbnQnO1xuXG5pbXBvcnQgQXRsYXNNZXRhZGF0YUNsaWVudCBmcm9tICdAcmV1dGVycy1ncmFwaGljcy9ncmFwaGljcy1hdGxhcy1jbGllbnQnO1xuaW1wb3J0IENoYXJ0Q29tcG9uZW50IGZyb20gJy4vYmFzZS9DaGFydENvbXBvbmVudCc7XG5pbXBvcnQgZDMgZnJvbSAnLi91dGlscy9kMyc7XG5cbmNvbnN0IEF0bGFzID0gbmV3IEF0bGFzTWV0YWRhdGFDbGllbnQoKTtcblxuY2xhc3MgR2xvYmV0cm90dGVyIGV4dGVuZHMgQ2hhcnRDb21wb25lbnQge1xuICBkZWZhdWx0UHJvcHMgPSB7XG4gICAgYm9yZGVyX3N0cm9rZV9jb2xvcjogJyMyZjM1M2YnLFxuICAgIG91dGVyX3N0cm9rZV9jb2xvcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC41KScsXG4gICAgc3Ryb2tlX3dpZHRoX2NvdW50cmllczogMC41LFxuICAgIHN0cm9rZV93aWR0aF9zcGhlcmU6IDAuMSxcbiAgICBoaWdobGlnaHRfY29sb3I6ICcjZmNlNTg3JyxcbiAgICBiYXNlX2NvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpJyxcbiAgICB2ZXJ0aWNhbF90aWx0OiAxNSxcbiAgICBtYXJnaW46IDEwLFxuICAgIGR1cmF0aW9uOiA3NTAsXG4gICAgZW5hYmxlX2RvdDogdHJ1ZSxcbiAgICBkb3RfcmFkaXVzOiA1LFxuICAgIGRpc3B1dGVkOiB0cnVlLFxuICAgIGFyZWFfdGhyZXNob2xkOiAxMCxcbiAgICBkaXNwdXRlZF9kYXNoYXJyYXk6IFs1LCA1XSxcbiAgICB0b3BvanNvbkZlYXR1cmVzOiB7XG4gICAgICBjb3VudHJpZXM6ICdjb3VudHJpZXMnLFxuICAgICAgZGlzcHV0ZWRCb3VuZGFyaWVzOiAnZGlzcHV0ZWRCb3VuZGFyaWVzJyxcbiAgICAgIGxhbmQ6ICdsYW5kJyxcbiAgICB9LFxuICAgIHNwaW46IGZhbHNlLFxuICAgIGNvdW50cnlJZEdldHRlcjogKHByb3BlcnRpZXMpID0+IHByb3BlcnRpZXMuaXNvQWxwaGEzLFxuICB9XG5cbiAgZHJhdygpIHtcbiAgICBjb25zdCBwcm9wcyA9IHRoaXMucHJvcHMoKTtcbiAgICBjb25zdCB0b3BvbG9neSA9IHRoaXMudG9wb2pzb24oKTtcbiAgICBjb25zdCBsb2NhdGlvbiA9IHRoaXMubG9jYXRpb24oKTtcbiAgICBjb25zdCBjb3VudHJpZXNGZWF0dXJlcyA9IHRvcG9sb2d5Lm9iamVjdHNbcHJvcHMudG9wb2pzb25GZWF0dXJlcy5jb3VudHJpZXNdO1xuICAgIGNvbnN0IGRpc3B1dGVkQm91bmRhcmllc0ZlYXR1cmVzID0gdG9wb2xvZ3kub2JqZWN0c1twcm9wcy50b3BvanNvbkZlYXR1cmVzLmRpc3B1dGVkQm91bmRhcmllc107XG4gICAgY29uc3QgbGFuZEZlYXR1cmVzID0gdG9wb2xvZ3kub2JqZWN0c1twcm9wcy50b3BvanNvbkZlYXR1cmVzLmxhbmRdO1xuICAgIGNvbnN0IG5vZGUgPSB0aGlzLnNlbGVjdGlvbigpLm5vZGUoKTtcbiAgICBjb25zdCBzcGhlcmUgPSB7IHR5cGU6ICdTcGhlcmUnIH07XG4gICAgY29uc3QgeyB3aWR0aCB9ID0gbm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBjb25zdCBjb3VudHJpZXMgPSB0b3BvanNvbi5mZWF0dXJlKHRvcG9sb2d5LCBjb3VudHJpZXNGZWF0dXJlcyk7XG4gICAgY29uc3QgYm9yZGVycyA9IHRvcG9qc29uLm1lc2godG9wb2xvZ3ksIGNvdW50cmllc0ZlYXR1cmVzLCAoYSwgYikgPT4gYSAhPT0gYik7XG4gICAgY29uc3QgZGlzcHV0ZWQgPSB0b3BvanNvbi5tZXNoKHRvcG9sb2d5LCBkaXNwdXRlZEJvdW5kYXJpZXNGZWF0dXJlcyk7XG4gICAgY29uc3QgbGFuZCA9IHRvcG9qc29uLmZlYXR1cmUodG9wb2xvZ3ksIGxhbmRGZWF0dXJlcyk7XG4gICAgY29uc3QgcHJvamVjdGlvbiA9IGQzLmdlb09ydGhvZ3JhcGhpYygpLmZpdEV4dGVudChbWzEwLCAxMF0sIFt3aWR0aCAtIDEwLCB3aWR0aCAtIDEwXV0sIHNwaGVyZSk7XG5cbiAgICB2YXIgY2FudmFzID0gdGhpcy5zZWxlY3Rpb24oKS5hcHBlbmRTZWxlY3QoJ2NhbnZhcycpXG4gICAgICAuYXR0cignd2lkdGgnLCB3aWR0aClcbiAgICAgIC5hdHRyKCdoZWlnaHQnLCB3aWR0aCk7XG5cbiAgICBjb25zdCB4ID0gY2FudmFzLmF0dHIoJ2NlbnRyb2lkLXgnKTtcbiAgICBjb25zdCB5ID0gY2FudmFzLmF0dHIoJ2NlbnRyb2lkLXknKTtcbiAgICBjb25zdCBwMSA9IFsteCwgcHJvcHMudmVydGljYWxfdGlsdCAtIHldO1xuXG4gICAgaWYgKHggJiYgeSkge1xuICAgICAgcHJvamVjdGlvbi5yb3RhdGUocDEpO1xuICAgIH1cbiAgICBpZiAocHJvcHMuc3Bpbikge1xuICAgICAgaWYgKHRoaXMuX3RpbWUpIHRoaXMuX3RpbWVyLnN0b3AoKTtcbiAgICAgIHRoaXMuX3RpbWVyID0gZDMudGltZXIoZnVuY3Rpb24oZWxhcHNlZCkge1xuICAgICAgICBjb25zb2xlLmxvZygnRklSRVMnKTtcbiAgICAgICAgcHJvamVjdGlvbi5yb3RhdGUoWzAuMDIgKiBlbGFwc2VkLCBwcm9wcy52ZXJ0aWNhbF90aWx0IC0geV0pO1xuICAgICAgICByZW5kZXIoKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IGNvbnRleHQgPSBjYW52YXMubm9kZSgpLmdldENvbnRleHQoJzJkJyk7XG5cbiAgICBjb25zdCBwYXRoID0gZDMuZ2VvUGF0aChwcm9qZWN0aW9uLCBjb250ZXh0KTtcblxuICAgIGxldCBwMiA9IFtdOyBsZXQgY291bnRyeTsgbGV0IG1lcmdlZDtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShsb2NhdGlvbikgJiYgbG9jYXRpb24ubGVuZ3RoID09PSAyKSB7XG4gICAgICBwMlswXSA9IGxvY2F0aW9uWzBdO1xuICAgICAgcDJbMV0gPSBsb2NhdGlvblsxXTtcbiAgICB9IGVsc2UgaWYgKEF0bGFzLmdldFJlZ2lvbihsb2NhdGlvbikpIHtcbiAgICAgIGNvbnN0IGNvdW50cnlMaXN0ID0gQXRsYXMuZ2V0UmVnaW9uKGxvY2F0aW9uKS5jb3VudHJpZXMubWFwKGQgPT4gZC5pc29BbHBoYTMpO1xuICAgICAgbWVyZ2VkID0gdG9wb2pzb24ubWVyZ2UodG9wb2xvZ3ksIGNvdW50cmllc0ZlYXR1cmVzLmdlb21ldHJpZXMuZmlsdGVyKGQgPT4gY291bnRyeUxpc3QuaW5jbHVkZXMocHJvcHMuY291bnRyeUlkR2V0dGVyKGQucHJvcGVydGllcykpKSk7XG4gICAgICBwMiA9IGQzLmdlb0NlbnRyb2lkKG1lcmdlZCk7XG4gICAgfSBlbHNlIGlmIChBdGxhcy5nZXRTdWJyZWdpb24obG9jYXRpb24pKSB7XG4gICAgICBjb25zdCBjb3VudHJ5TGlzdCA9IEF0bGFzLmdldFN1YnJlZ2lvbihsb2NhdGlvbikuY291bnRyaWVzLm1hcChkID0+IGQuaXNvQWxwaGEzKTtcbiAgICAgIG1lcmdlZCA9IHRvcG9qc29uLm1lcmdlKHRvcG9sb2d5LCBjb3VudHJpZXNGZWF0dXJlcy5nZW9tZXRyaWVzLmZpbHRlcihkID0+IGNvdW50cnlMaXN0LmluY2x1ZGVzKHByb3BzLmNvdW50cnlJZEdldHRlcihkLnByb3BlcnRpZXMpKSkpO1xuICAgICAgcDIgPSBkMy5nZW9DZW50cm9pZChtZXJnZWQpO1xuICAgIH0gZWxzZSBpZiAoQXRsYXMuZ2V0Q291bnRyeShsb2NhdGlvbikpIHtcbiAgICAgIGNvbnN0IHsgaXNvQWxwaGEzIH0gPSBBdGxhcy5nZXRDb3VudHJ5KGxvY2F0aW9uKTtcbiAgICAgIGNvdW50cnkgPSBjb3VudHJpZXMuZmVhdHVyZXMuZmlsdGVyKGQgPT4gcHJvcHMuY291bnRyeUlkR2V0dGVyKGQucHJvcGVydGllcykgPT09IGlzb0FscGhhMylbMF07XG4gICAgICBwMiA9IGQzLmdlb0NlbnRyb2lkKGNvdW50cnkpO1xuICAgIH1cblxuICAgIGxldCBhcmVhLCBlbmRQYXRoO1xuXG4gICAgcmVuZGVyKCk7XG4gICAgZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgaWYgKHAxWzBdICE9PSBwMlswXSAmJiBwMVsxXSAhPT0gcDJbMV0gJiYgKHAyWzBdICYmIHAyWzFdKSkge1xuICAgICAgICBlbmRQYXRoID0gZDMuZ2VvUGF0aChkMy5nZW9PcnRob2dyYXBoaWMoKS5maXRFeHRlbnQoW1sxMCwgMTBdLCBbd2lkdGggLSAxMCwgd2lkdGggLSAxMF1dLCBzcGhlcmUpLnJvdGF0ZShbLXAyWzBdLCBwcm9wcy52ZXJ0aWNhbF90aWx0IC0gcDJbMV1dKSwgY29udGV4dCk7XG4gICAgICAgIGNvbnN0IHIgPSBkMy5pbnRlcnBvbGF0ZShwcm9qZWN0aW9uLnJvdGF0ZSgpLCBbLXAyWzBdLCBwcm9wcy52ZXJ0aWNhbF90aWx0IC0gcDJbMV1dKTtcbiAgICAgICAgYXJlYSA9IGVuZFBhdGguYXJlYShjb3VudHJ5KTtcbiAgICAgICAgY2FudmFzLnRyYW5zaXRpb24oKVxuICAgICAgICAgIC5kdXJhdGlvbihwcm9wcy5kdXJhdGlvbilcbiAgICAgICAgICAudHdlZW4oJ3JvdGF0ZScsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICAgICAgcHJvamVjdGlvbi5yb3RhdGUocih0KSk7XG4gICAgICAgICAgICAgIGNvbnN0IGNlbnRyb2lkUHJvID0gcHJvamVjdGlvbihwMik7XG4gICAgICAgICAgICAgIGNvbnRleHQuY2xlYXJSZWN0KDAsIDAsIHdpZHRoLCB3aWR0aCk7XG4gICAgICAgICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICAgIHBhdGgobGFuZCk7XG4gICAgICAgICAgICAgIGNvbnRleHQuZmlsbFN0eWxlID0gcHJvcHMuYmFzZV9jb2xvcjtcbiAgICAgICAgICAgICAgY29udGV4dC5maWxsKCk7XG4gICAgICAgICAgICAgIGlmIChtZXJnZWQpIHtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgICAgIHBhdGgobWVyZ2VkKTtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IHByb3BzLmhpZ2hsaWdodF9jb2xvcjtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmZpbGwoKTtcbiAgICAgICAgICAgICAgfSBlbHNlIGlmICgoY291bnRyeSAmJiBhcmVhID4gcHJvcHMuYXJlYV90aHJlc2hvbGQpIHx8ICghcHJvcHMuZW5hYmxlX2RvdCkpIHtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgICAgIHBhdGgoY291bnRyeSk7XG4gICAgICAgICAgICAgICAgY29udGV4dC5maWxsU3R5bGUgPSBwcm9wcy5oaWdobGlnaHRfY29sb3I7XG4gICAgICAgICAgICAgICAgY29udGV4dC5maWxsKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgaWYgKHByb3BzLmRpc3B1dGVkKSB7XG4gICAgICAgICAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgICAgICBwYXRoKGRpc3B1dGVkKTtcbiAgICAgICAgICAgICAgICBjb250ZXh0LnNldExpbmVEYXNoKHByb3BzLmRpc3B1dGVkX2Rhc2hhcnJheSk7XG4gICAgICAgICAgICAgICAgY29udGV4dC5zdHJva2VTdHlsZSA9IHByb3BzLmJvcmRlcl9zdHJva2VfY29sb3I7XG4gICAgICAgICAgICAgICAgY29udGV4dC5saW5lV2lkdGggPSBwcm9wcy5zdHJva2Vfd2lkdGhfY291bnRyaWVzO1xuICAgICAgICAgICAgICAgIGNvbnRleHQuc3Ryb2tlKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTsgcGF0aChib3JkZXJzKTsgY29udGV4dC5zZXRMaW5lRGFzaChbXSk7IGNvbnRleHQuc3Ryb2tlU3R5bGUgPSBwcm9wcy5ib3JkZXJfc3Ryb2tlX2NvbG9yOyBjb250ZXh0LmxpbmVXaWR0aCA9IHByb3BzLnN0cm9rZV93aWR0aF9jb3VudHJpZXM7IGNvbnRleHQuc3Ryb2tlKCk7XG4gICAgICAgICAgICAgIGlmIChwcm9wcy5lbmFibGVfZG90ICYmIGFyZWEgPCBwcm9wcy5hcmVhX3RocmVzaG9sZCkge1xuICAgICAgICAgICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICAgICAgY29udGV4dC5hcmMoY2VudHJvaWRQcm9bMF0sIGNlbnRyb2lkUHJvWzFdLCBwcm9wcy5kb3RfcmFkaXVzLCAwLCAyICogTWF0aC5QSSk7XG4gICAgICAgICAgICAgICAgY29udGV4dC5zdHJva2VTdHlsZSA9IHByb3BzLmhpZ2hsaWdodF9jb2xvcjtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmxpbmVXaWR0aCA9IHByb3BzLmRvdF9yYWRpdXMgLSAyO1xuICAgICAgICAgICAgICAgIGNvbnRleHQuc3Ryb2tlKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgICAgcGF0aChzcGhlcmUpO1xuICAgICAgICAgICAgICBjb250ZXh0LnN0cm9rZVN0eWxlID0gcHJvcHMub3V0ZXJfc3Ryb2tlX2NvbG9yO1xuICAgICAgICAgICAgICBjb250ZXh0LmxpbmVXaWR0aCA9IHByb3BzLnN0cm9rZV93aWR0aF9zcGhlcmU7XG4gICAgICAgICAgICAgIGNvbnRleHQuc3Ryb2tlKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29udGV4dC5jbGVhclJlY3QoMCwgMCwgd2lkdGgsIHdpZHRoKTtcbiAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgcGF0aChjb3VudHJpZXMpO1xuICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IHByb3BzLmJhc2VfY29sb3I7XG4gICAgICAgIGNvbnRleHQuZmlsbCgpO1xuICAgICAgICBpZiAocHJvcHMuZGlzcHV0ZWQpIHtcbiAgICAgICAgICBjb250ZXh0LmJlZ2luUGF0aCgpOyBwYXRoKGRpc3B1dGVkKTtcbiAgICAgICAgICBjb250ZXh0LnNldExpbmVEYXNoKHByb3BzLmRpc3B1dGVkX2Rhc2hhcnJheSk7XG4gICAgICAgICAgY29udGV4dC5zdHJva2VTdHlsZSA9IHByb3BzLmJvcmRlcl9zdHJva2VfY29sb3I7XG4gICAgICAgICAgY29udGV4dC5saW5lV2lkdGggPSBwcm9wcy5zdHJva2Vfd2lkdGhfY291bnRyaWVzO1xuICAgICAgICAgIGNvbnRleHQuc3Ryb2tlKCk7XG4gICAgICAgIH1cbiAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgcGF0aChib3JkZXJzKTtcbiAgICAgICAgY29udGV4dC5zZXRMaW5lRGFzaChbXSk7XG4gICAgICAgIGNvbnRleHQuc3Ryb2tlU3R5bGUgPSBwcm9wcy5ib3JkZXJfc3Ryb2tlX2NvbG9yO1xuICAgICAgICBjb250ZXh0LmxpbmVXaWR0aCA9IHByb3BzLnN0cm9rZV93aWR0aF9jb3VudHJpZXM7XG4gICAgICAgIGNvbnRleHQuc3Ryb2tlKCk7XG4gICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgIHBhdGgoc3BoZXJlKTtcbiAgICAgICAgY29udGV4dC5zdHJva2VTdHlsZSA9IHByb3BzLm91dGVyX3N0cm9rZV9jb2xvcjtcbiAgICAgICAgY29udGV4dC5saW5lV2lkdGggPSBwcm9wcy5zdHJva2Vfd2lkdGhfc3BoZXJlO1xuICAgICAgICBjb250ZXh0LnN0cm9rZSgpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBjYW52YXMuYXR0cignY2VudHJvaWQteCcsIHAyWzBdKTtcbiAgICBjYW52YXMuYXR0cignY2VudHJvaWQteScsIHAyWzFdKTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEdsb2JldHJvdHRlcjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/lib/chart.js\n");

/***/ })

})